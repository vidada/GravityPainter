package com.badlogic.qbob.prototypestest;


import java.util.HashMap;

import com.badlogic.gdx.physics.box2d.Body;
import com.badlogic.gdx.physics.box2d.Contact;
import com.badlogic.gdx.physics.box2d.ContactImpulse;
import com.badlogic.gdx.physics.box2d.ContactListener;
import com.badlogic.gdx.physics.box2d.Manifold;

final class contactListener implements ContactListener {


	private player personnage;
	private GestionaireGravity gravitys;
	private Weightlessness gravitee;
	private int nbcontactencour;



	public contactListener(player _personnage, GestionaireGravity _gravitys,Weightlessness _gravitee) {
		personnage = _personnage;
		gravitys = _gravitys;
		gravitee = _gravitee;

	}

	public void preSolve(Contact contact, Manifold oldManifold) 
	{


	}


	public void postSolve(Contact contact, ContactImpulse impulse)
	{
		//		Body a =  contact.getFixtureA().getBody();
		//		Body b =  contact.getFixtureB().getBody();
		//		String aData = (String)a.getUserData();
		//		String bData = (String)b.getUserData();
		//		
		//		if((aData == "SENSOR_PLAYER_FOOTER"&& bData == "TILE_DE_GRAVITE")|| (bData == "SENSOR_PLAYER_FOOTER" && aData == "TILE_DE_GRAVITE"))
		//		{
		//			System.out.println("le contact POST");
		//				personnage.setCanJump(true);
		//				
		//		}

	}


	public void endContact(Contact contact) 
	{
		Body a =  contact.getFixtureA().getBody();
		Body b =  contact.getFixtureB().getBody();
		int aData = (Integer)a.getUserData();
		int bData =  (Integer)b.getUserData();
		if((aData == player.SENSOR_BOTTOM && bData == Gravity.TILE)|| (bData == player.SENSOR_BOTTOM && aData == Gravity.TILE))
		{
			nbcontactencour--;
			System.out.println("le contact est coupernbcontactencour" + nbcontactencour);
			if (nbcontactencour == 0)
			{
				personnage.setCanJump(false);
			}	
		}
	}


	public void beginContact(Contact contact) 
	{


		Body a =  contact.getFixtureA().getBody();
		Body b =  contact.getFixtureB().getBody();
		System.out.println("SENSOR X " +b.getUserData());
		System.out.println("SENSOR X " +a.getUserData());
		int aData =  (Integer) a.getUserData();
		int bData =  (Integer) b.getUserData();
		//test du footer du player en contact avec le sol
		if((aData == player.SENSOR_RIGHT || bData == player.SENSOR_RIGHT)||(aData == player.SENSOR_LEFT || bData == player.SENSOR_LEFT))
		{
			
			System.out.println("SENSORRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRR " +a.getUserData());
			
		}
		if((aData == player.SENSOR_BOTTOM && bData == Gravity.TILE)|| (bData == player.SENSOR_BOTTOM && aData == Gravity.TILE))
		{
			nbcontactencour=nbcontactencour+1;
			System.out.println("le contact marche");
			personnage.setCanJump(true);

		}


		// SI LE SENSOR LEFT EST EN CONTACT AVEC UNE TILE DE GRAVITE

		for (int iSensor = 10001; iSensor <= 10004; iSensor++) {
			{
				//				HashMap<Integer, Gravity> listContact = gravitys.InContact(personnage.getSensorBody(iSensor).getPosition(),50);
				//				if(listContact != null)
				//				{
				//					for (int Key : listContact.keySet()) 
				//					{
				////						
				
				//int cData =  (Integer) listContact.get(Key).getBody().getUserData();
				if((aData == iSensor && bData == Gravity.TILE) || (bData ==  iSensor && aData == Gravity.TILE))
				{
					System.out.println("CONTACT AVEC UNE TILE DE GRAVITE ACTIVE !--- : "+ iSensor);
					boolean isInContact = false;
					if(aData == iSensor)
					{
						
						Gravity grav = gravitys.thisBodyTile(b);
						if(grav != null)
						{
							isInContact = grav.isInContact(b.getPosition());
						}
					}
					else
					{

						Gravity grav = gravitys.thisBodyTile(a);
						grav.isInContact(a.getPosition());
						if(grav != null)
						{
							isInContact = grav.isInContact(a.getPosition());
						}

					}	

					if(isInContact)  
					{
						if(iSensor == player.SENSOR_BOTTOM)
						{
							personnage.setAngleGravitee(0);
						}
						else if(iSensor == player.SENSOR_RIGHT)
						{
							personnage.setAngleGravitee(90);
						}

					}

				}			



				//					}
			//				}
			}

		}
	}}